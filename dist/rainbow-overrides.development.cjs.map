{"version":3,"file":"rainbow-overrides.development.cjs","sources":["../src/compile.ts","../src/write.ts"],"sourcesContent":["import glob from 'glob'\nimport { promises as fs } from 'fs'\nimport defaultOverrides from './data/default-overrides.json';\n\nexport type OverrideToken = {\n  color?: string;\n  isCurated?: boolean;\n  isVerified?: boolean;\n  name?: string;\n  symbol?: string;\n  shadowColor?: string;\n};\n\nexport const getOverrides = async () => {\n  const overrides: { [address: string]: OverrideToken } = {};\n  const overrideFiles = glob.sync('tokens/**/*.json');\n\n  for (const overrideFile of overrideFiles) {\n    const rawOverride = JSON.parse(\n      await fs.readFile(overrideFile, 'utf-8')\n    );\n    /**\n     * Each override is indexed by its address, i.e.: \n     *\n     * { '0x123...': { color: ... }, ... }\n     */\n    const { address, ...overrideData } = rawOverride;\n    overrides[address] = overrideData;\n  }\n\n  return {\n    ...defaultOverrides,\n    ...overrides,\n  };\n}\n\nexport { defaultOverrides };","import { promises as fs } from 'fs';\nimport { getOverrides } from './compile.js';\n\nexport const write = async () => {\n  const overrides = await getOverrides();\n  const serialized = JSON.stringify(overrides, null, 2);\n  /**\n   * Copy to src/output for exporting.\n   */\n  await fs.writeFile(\n    'src/data/rainbow-overrides.json',\n    serialized\n  );\n};\n"],"names":["glob","fs"],"mappingsaa,YAAY,GAAG;IAC1B,MAAM,SAAS,GAAyC,EAAE,CAAC;IAC3D,MAAM,aAAa,GAAGA,wBAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAEpD,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;QACxC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAC5B,MAAMC,WAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CACzC,CAAC;;;;;;QAMF,MAAM,EAAE,OAAO,EAAE,GAAG,YAAY,EAAE,GAAG,WAAW,CAAC;QACjD,SAAS,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC;KACnC;IAED,OAAO;QACL,GAAG,gBAAgB;QACnB,GAAG,SAAS;KACb,CAAC;AACJ;;MC/Ba,KAAK,GAAG;IACnB,MAAM,SAAS,GAAG,MAAM,YAAY,EAAE,CAAC;IACvC,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;;;IAItD,MAAMA,WAAE,CAAC,SAAS,CAChB,iCAAiC,EACjC,UAAU,CACX,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}